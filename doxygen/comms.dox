/// @namespace comms
/// @brief Main namespace for all classes / functions of COMMS library.

/// @namespace comms::util
/// @brief Namespace for various utility classes and/or functions used by COMMS library.

/// @namespace comms::util::detect
/// @brief Namespace for various @b compile-time detection operations of whether a type
///     has certain member types and/or member functions.

/// @namespace comms::util::alloc
/// @brief Namespace for various allocation classes.

/// @namespace comms::util::traits
/// @brief Namespace for various utilities related trait classes.

/// @namespace comms::util::traits::endian
/// @brief Namespace for utilities related endian definition trait classes.

/// @namespace comms::option
/// @brief Namespace that contains all the options used to define protocol as well
/// as customize application specific configuration.
/// @details Contains all the definitions from @ref comms::option::def and
///     @ref comms::option::app namespaces

/// @namespace comms::option::def
/// @brief Namespace that contains all the options used to @b define protocol.

/// @namespace comms::option::app
/// @brief Namespace that contains all the options used for @b application specific customization.

/// @namespace comms::frame
/// @brief Namespace that contains definition of layers that can be used to
///     wrap message data with transport data.

/// @namespace comms::frame::checksum
/// @brief Namespace that contains definition of checksum calculator classes which
///     can be used with comms::frame::ChecksumLayer transport layer class.

/// @namespace comms::field
/// @brief Namespace that contains definitions of all message fields.

/// @namespace comms::traits
/// @brief Namespace for various traits tag classes.

/// @namespace comms::traits::endian
/// @brief Namespace for traits tag classes used to specify serialisation endian.

/// @namespace comms::traits::units
/// @brief Namespace for various traits tag classes used in units conversion operations.

/// @namespace comms::traits::dispatch
/// @brief Namespace for various traits tag classes used in dispatch operations.

/// @namespace comms::units
/// @brief Namespace containing units conversion operations
/// @details
///     The supported units categories are:
///     @li Time
///         - @ref comms::units::getNanoseconds()
///         - @ref comms::units::setNanoseconds()
///         - @ref comms::units::isNanoseconds()
///         - @ref comms::units::getMicroseconds()
///         - @ref comms::units::setMicroseconds()
///         - @ref comms::units::isMicroseconds()
///         - @ref comms::units::getMilliseconds()
///         - @ref comms::units::setMilliseconds()
///         - @ref comms::units::isMilliseconds()
///         - @ref comms::units::getSeconds()
///         - @ref comms::units::setSeconds()
///         - @ref comms::units::isSeconds()
///         - @ref comms::units::getMinutes()
///         - @ref comms::units::setMinutes()
///         - @ref comms::units::isMinutes()
///         - @ref comms::units::getHours()
///         - @ref comms::units::setHours()
///         - @ref comms::units::isHours()
///         - @ref comms::units::getWeeks()
///         - @ref comms::units::setWeeks()
///         - @ref comms::units::isWeeks()
///     @li Distance
///         - @ref comms::units::getNanometers()
///         - @ref comms::units::setNanometers()
///         - @ref comms::units::isNanometers()
///         - @ref comms::units::getMicrometers()
///         - @ref comms::units::setMicrometers()
///         - @ref comms::units::isMicrometers()
///         - @ref comms::units::getMillimeters()
///         - @ref comms::units::setMillimeters()
///         - @ref comms::units::isMillimeters()
///         - @ref comms::units::getCentimeters()
///         - @ref comms::units::setCentimeters()
///         - @ref comms::units::isCentimeters()
///         - @ref comms::units::getMeters()
///         - @ref comms::units::setMeters()
///         - @ref comms::units::isMeters()
///         - @ref comms::units::getKilometers()
///         - @ref comms::units::setKilometers()
///         - @ref comms::units::isKilometers()
///     @li Speed
///         - @ref comms::units::getNanometersPerSecond()
///         - @ref comms::units::setNanometersPerSecond()
///         - @ref comms::units::isNanometersPerSecond()
///         - @ref comms::units::getMicrometersPerSecond()
///         - @ref comms::units::setMicrometersPerSecond()
///         - @ref comms::units::isMicrometersPerSecond()
///         - @ref comms::units::getMillimetersPerSecond()
///         - @ref comms::units::setMillimetersPerSecond()
///         - @ref comms::units::isMillimetersPerSecond()
///         - @ref comms::units::getCentimetersPerSecond()
///         - @ref comms::units::setCentimetersPerSecond()
///         - @ref comms::units::isCentimetersPerSecond()
///         - @ref comms::units::getMetersPerSecond()
///         - @ref comms::units::setMetersPerSecond()
///         - @ref comms::units::isMetersPerSecond()
///         - @ref comms::units::getKilometersPerSecond()
///         - @ref comms::units::setKilometersPerSecond()
///         - @ref comms::units::isKilometersPerSecond()
///         - @ref comms::units::getKilometersPerHour()
///         - @ref comms::units::setKilometersPerHour()
///         - @ref comms::units::isKilometersPerHour()
///     @li Frequency
///         - @ref comms::units::getHertz()
///         - @ref comms::units::setHertz()
///         - @ref comms::units::isHertz()
///         - @ref comms::units::getKilohertz()
///         - @ref comms::units::setKilohertz()
///         - @ref comms::units::isKilohertz()
///         - @ref comms::units::getMegahertz()
///         - @ref comms::units::setMegahertz()
///         - @ref comms::units::isMegahertz()
///         - @ref comms::units::getGigahertz()
///         - @ref comms::units::setGigahertz()
///         - @ref comms::units::isGigahertz()
///     @li Angle
///         - @ref comms::units::getDegrees()
///         - @ref comms::units::setDegrees()
///         - @ref comms::units::isDegrees()
///         - @ref comms::units::getRadians()
///         - @ref comms::units::setRadians()
///         - @ref comms::units::isRadians()
///     @li Electric Current
///         - @ref comms::units::getNanoamps()
///         - @ref comms::units::setNanoamps()
///         - @ref comms::units::isNanoamps()
///         - @ref comms::units::getMicroamps()
///         - @ref comms::units::setMicroamps()
///         - @ref comms::units::isMicroamps()
///         - @ref comms::units::getMilliamps()
///         - @ref comms::units::setMilliamps()
///         - @ref comms::units::isMilliamps()
///         - @ref comms::units::getAmps()
///         - @ref comms::units::setAmps()
///         - @ref comms::units::isAmps()
///         - @ref comms::units::getKiloamps()
///         - @ref comms::units::setKiloamps()
///         - @ref comms::units::isKiloamps()
///     @li Electric Voltage
///         - @ref comms::units::getNanovolts()
///         - @ref comms::units::setNanovolts()
///         - @ref comms::units::isNanovolts()
///         - @ref comms::units::getMicrovolts()
///         - @ref comms::units::setMicrovolts()
///         - @ref comms::units::isMicrovolts()
///         - @ref comms::units::getMillivolts()
///         - @ref comms::units::setMillivolts()
///         - @ref comms::units::isMillivolts()
///         - @ref comms::units::getVolts()
///         - @ref comms::units::setVolts()
///         - @ref comms::units::isVolts()
///         - @ref comms::units::getKilovolts()
///         - @ref comms::units::setKilovolts()
///         - @ref comms::units::isKilovolts()
///     @li Computer Memory
///         - @ref comms::units::getBytes()
///         - @ref comms::units::setBytes()
///         - @ref comms::units::isBytes()
///         - @ref comms::units::getKilobytes()
///         - @ref comms::units::setKilobytes()
///         - @ref comms::units::isKilobytes()
///         - @ref comms::units::getMegabytes()
///         - @ref comms::units::setMegabytes()
///         - @ref comms::units::isMegabytes()
///         - @ref comms::units::getGigabytes()
///         - @ref comms::units::setGigabytes()
///         - @ref comms::units::isGigabytes()
///         - @ref comms::units::getTerabytes()
///         - @ref comms::units::setTerabytes()
///         - @ref comms::units::isTerabytes()
///