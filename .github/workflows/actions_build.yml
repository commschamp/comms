name: Github Actions Build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  build_gcc_ubuntu_22_04:
    if: false
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install doxygen dia gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

  build_gcc_ubuntu_24_04:
    if: false
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [13, 14]
        cpp: [11, 14, 17, 20, 23]
        exclude:
          - cc_ver: 13
            cpp: 23        

    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install doxygen dia gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

    - name: Documentation
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make doc_comms       

  build_clang_ubuntu_22_04:
    if: false
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [12, 13, 14, 15]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare Install
      run: sudo apt-get update --fix-missing
      
    - name: Install Packages
      run: sudo apt install doxygen dia clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

  build_clang_ubuntu_24_04:
    if: false
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [16, 17, 18, 19]
        cpp: [11, 14, 17, 20, 23]
        exclude:
          - cc_ver: 16
            cpp: 23
          - cc_ver: 17
            cpp: 23

    steps:
    - uses: actions/checkout@v4
    
    - name: Prepare Install
      run: sudo apt-get update --fix-missing
      
    - name: Install Packages
      run: sudo apt install doxygen dia clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

    - name: Documentation
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make doc_comms 

  build_msvc_2022:
    if: false
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release]
        arch: [Win32, x64]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4
    
    - name: Create Build Environment
      shell: cmd
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: ctest -V 


  build_msvc_2025:
    runs-on: windows-2025
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release]
        arch: [Win32, x64]
        cpp: [11, 14, 17, 20, 23]

    steps:
    - uses: actions/checkout@v4
    
    - name: Create Build Environment
      shell: cmd
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCC_COMMS_BUILD_UNIT_TESTS=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: ctest -V 

